<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>学习规划</title>
    <url>/2020/05/10/%E5%AD%A6%E4%B9%A0%E8%A7%84%E5%88%92/</url>
    <content><![CDATA[<p>整着今天晚上也没什么事，没啥什么学习动力，就给大家来分享一下关于自己的一个学习规划，大家可以参考来制定自己的学习计划。写这篇博客同时也是给自己提醒要不断学习，不能中途放弃。</p>
<a id="more"></a>  

<h2 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h2><blockquote>
<p>前言<br>大学内学什么<br>后记</p>
</blockquote>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>“<strong>怎么学习</strong>”这个问题，从上幼儿园开始就在接触，到现在大学，也是一直在学习，包括以后工作时，也是要不断地学习，毕竟技术在不断发展，不学习只会被淘汰，子曰：学而时习之，不亦乐乎。</p>
<p>我对学习的看法就两个，第一个是<strong>态度</strong>，第二个是<strong>方法</strong>。态度就是要保持住终身学习的态度，以高中时冲刺高考的心态去学习各种新知识，拓宽自己的知识面。其次就是方法，用对方法会事半功倍，大大提高自己的学习效率。</p>
<p>在大学里面，大家有没有思考过大四应该干嘛呢？是准备去<strong>考研</strong>还是<strong>直接工作</strong>？考研的话英语和高数大家平时学的怎么样呢，考上研究生的概率有多大？如果事选择直接工作，那更得思考自己的社会竞争力又如何呢？所以大家要好好开始准备咯，毕竟一眨眼就大三了，还有最后的机会。</p>
<div align=center>

<img src="http://121.43.238.224:8080/images/1.png" width=40%/>

</div>


<h3 id="大学内学什么"><a href="#大学内学什么" class="headerlink" title="大学内学什么"></a>大学内学什么</h3><p>####考研</p>
<p>我觉得这个也不用细致的说明，考研四门课，<strong>数学成绩决定了你的上限，英语成绩决定了你的下限</strong>。大家英语和高数学的怎么样呢？如果大家决定了要考研深造，大家一定要从现在抓起，把基础夯实，没有基础，明年再去重头学是非常累的，所以为了给以后的自己轻松点，所以大家一定要从现在开始就要好好学习了，没有基础又怎么能考上心仪的学校，去见<strong>心仪的学长和学姐</strong>呢？ </p>
<p>#####1.一般什么时候开始准备考研</p>
<p>在大三下学期的3、4月份开始准备考研是比较不错的，这样距离考研初试的时间大概是9个月，不会因为战线太长而导致后期疲惫，也不会因为时间太短而导致考研准备不够充分。 当然这都是有一定知识基础上而说的，如果你甚至一直在为了不挂科而苦思冥想的话，我劝你从现在就开始好好准备基础，毕竟到时候人家可能1小时就掌握的知识点，你可能需要2小时，甚至3小时。    </p>
<p>#####2.应该怎么准备考研</p>
<p>收集考研信息。不可能在脑子里只有一个“我要考研”的想法就能考研，在产生这种想法之后，必须搜集大量的资料，确定自己想要报考的专业、学校，该专业的对学生的要求着重点在哪些方面。<br>考研英语凭借的是日常的积累，如果很早就确定自己要考研，在平时学习上就稍加注意，其实无论是否考研，英语对与个人发展都比较重要。<br>一定要坚持。到了后期，考研人大都身心俱疲，再加上离考试越来越近，内心紧张，觉得自己没有复习的地方还有很多，之前复习到的也会忘记，反正考不上，不如不考了。其实每个人都有过这样的心理时期，这时候我们需要加以调节，短暂放松之后再继续复习考研，坚持到最后，结果一定会让你惊喜的。<br>考生要学会利用考研需要的官网，比如志愿学校的研招网，很多学校会公布自己的考研信息，但是不太容易寻找，仔细阅读，大概率能够得到自己的考研资料。考生要明确了解考研复习阶段。什么时间夯实基础，强化练习，进行冲刺，这是有一定的时间安排的，并且具有一定的参考意义的。  </p>
<p>####技术学习  </p>
<p>最近看到很多大佬在自己的博客上分享自己最近学习了什么东西，这真的是一件非常棒的事情，但我自己比较懒，没时间发，毕竟学习更多是自己的事情，但是偶尔看看别人学习了什么对自己也是一个很好的帮助和鼓励。对于技术学习，我自己也是非常重视的，毕竟我们以后要靠这个生活。但是现在我们掌握的实在太少了，什么都不会，与其羡慕各种大佬进了阿里，字节等一线大厂，还不如自己一个人静下心来踏踏实实学点东西。<br>像我为例，自己想多学习有关Java的知识，以后找一份好一点的Java工作。但是这时候我们要怎么学习呢？  </p>
<p>#####知识体系  </p>
<p>体系化的知识比零散的更容易记忆和理解，这正如一部好的电视剧，剧情环环相扣才能吸引观众。建议大家使用思维导图罗列知识点，构建体系结构。大家可以直接参照知识体系图好好学习基础知识。<br>废话不多说，直接上图：  </p>
<div align=center>

<img src="http://121.43.238.224:8080/images/2.jpg" width=50%/>

</div>

<p>#####进阶学习    </p>
<p>以Java工程师应该掌握的知识为例，按重要程度排出六个梯度：<br>第一梯度：计算机组成原理、数据结构和算法、网络通信原理操作系统原理；<br>第二梯度：Java基础、JVM内存模型和GC算法、JVM性能调优、JDK工具、设计模式；<br>第三梯度：Spring系列、Mybatis、Dubbo、SSM等主流框架的运用和原理；<br>第四梯度：MySQL(含SQL编程)、RabbitMQ/RocketMQ/Kafka、ZooKeeper、Redis等数据库或者中 间件的运用和原理；<br>第五梯度：CAP理论、BASE理论、Paxos和Raft算法等其他分布式理论；<br>第六梯度：容器化、大数据、AI、区块链等等前沿技术理论；<br>当然这些都是我一位程序员大哥告诉我的，其中知识点不是特别全，但是在学习的时候自然而然就会扩展出去，比如python的爬虫技术，虚拟机等等。很多时候我们并不是不想学习，只是根本不知道要学一些什么东西，毕竟知识点太多太杂了，尤其是程序员这一行，大家可以根据这个好好学哦。我现在第一梯度还没有掌握完全呢，第二梯度的东西也在学习，我希望在毕业前能够完全掌握4个梯度然后在研究生阶段继续深造学习。</p>
<div align=center>

<img src="http://121.43.238.224:8080/images/3.png" width=50%/>

</div>  

<p>######广度和深度  </p>
<p>我的程序员大哥说，现在许多公司的招聘JD没有设定技术人员年龄门槛，但是会加上一句”具备与年龄相当的知识的广度与深度”。多广才算广，多深才算深？这是很主观的话题，我也不是特别懂，所以不展开讨论。</p>
<p>如何变得更广更深呢？突破收入上升的瓶颈，发掘自己真正的兴趣。</p>
<p>我哥说，现在大多数人只是公司的普通职员，收入上升的瓶颈就是升职加薪。许多IT公司会对技术人员有个评级，如果你的评级不高，那就依照晋级章程努力升级。如果你在一个小公司，收入一般，发展前景不明，准备大厂的面试就是最好的学习过程。在这些过程中，你必然学习更多知识，变得更广更深。个人兴趣是前进的动力之一，许多知名开源项目都源于作者的兴趣。个人兴趣并不局限技术领域，可以是其他学科。我有个朋友喜欢玩山地自行车，还给一些做自行车话题的自媒体投稿。久而久之，居然能够写一手好文章了，我相信他也能写好技术文档。  </p>
<div align=center>

<img src="http://121.43.238.224:8080/images/4.jpg" width=80%/>

</div> 

<p>######书籍推荐<br>Java 书籍（别人实际推荐）<br>《JAVA编程思想》 Java届圣经，学习入门一年后，可以着手开始读，3-6学习完，会发现你对这个语言有新的认识，不推荐小白入门就看这个，会怀疑人生。<br>《Effective Java》 有中文版，里面很多东西讲的很明白，比某些课程的老师讲的还好。<br>《深入理解Java虚拟机》面试有时候喜欢问这里面的一些问题，对虚拟机栈和区，垃圾回收等等至少有点概念和门道。<br>以上都不是纯小白入门的，小白入门还是先看看视频，敲两行代码。    </p>
<h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>路漫漫其修远兮，这篇博客最大的目的还是鼓励自己多学习，毕竟没有什么技术知识点，更多是鸡汤鼓励，加油！！！ </p>
]]></content>
  </entry>
  <entry>
    <title>css-filter学习笔记</title>
    <url>/2020/03/29/css-filter%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>个人学习 CSS:filter 过程中写的笔记，不具备任何价值。CSS 滤镜（filter）属提供的图形特效，像模糊，锐化或元素变色。过滤器通常被用于调整图片，背景和边界的渲染。FILTER URL 还不是很明白…</p>
<a id="more"></a>
<hr>
<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><pre><code>// URL to SVG filter   
filter: url(&quot;filters.svg#filter-id&quot;); 
// &lt;filter-function&gt; values  
filter: blur(0px);  // 高斯模糊  
filter: brightness(100%);  // 线性乘法，使图片看起来更亮或更暗  
filter: contrast(100%);  // 对比度  
filter: drop-shadow($offset-x $offset-y $blur $spread $color);  // 阴影，相似于 box-shadow  
filter: grayscale(0%);  // 转换为灰度图像  
filter: hue-rotate(0deg);  // 色相旋转  
filter: invert(0%);  // 反转输入图像  
filter: opacity(100%);  // 不透明度  
filter: saturate(100%);  // 转换图像饱和度  
filter: sepia(0%);  // 将图像转换为深褐色，暖色调   
// Multiple filters  
filter: contrast(100%) brightness(100%);   
// Global values  
filter: inherit;  
filter: initial;  
filter: unset;    </code></pre><hr>
<h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><blockquote>
<p>// gray all images by 50% and blur by 10px<br>img {<br> filter: grayscale(0.5) blur(10px);<br>}   </p>
</blockquote>
<p>参考资料：<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/filter" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/CSS/filter</a></p>
]]></content>
  </entry>
  <entry>
    <title>Markdown基本语法集合</title>
    <url>/2020/03/28/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95%E9%9B%86%E5%90%88/</url>
    <content><![CDATA[<p>Markdown 基本语法是写博客的方法，本文将以该博文为内容展现形式，此文同样是从<a href="https://mp.weixin.qq.com/s?src=11&timestamp=1585394790&ver=2244&signature=6-ZqIta*Zc62K5KBgoURCbL-zOwUB*KLGFg8FLK3YnLkw51gGTiMpdLpnStASCfKY1rMK-12loYssqPf*L2BE6xwfsMaYqYI*0ikAafQeLZ0E0Q20uzgLOeHYLIY6re2&new=1" target="_blank" rel="noopener">网络大神</a>拷贝 下来的，为了让同学们查阅语法方便，所以这里给同学们提供一些示例，进而快速认知Markdown语法，然后在适合你的Hexo上写下属于自己博文吧 ！</p>
<a id="more"></a>  
<h2 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h2><blockquote>
<p>Markdown是什么<br>是谁创造了它<br>为什么要使用它<br>基本语法</p>
</blockquote>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="1-Markdown是什么？"><a href="#1-Markdown是什么？" class="headerlink" title="1.Markdown是什么？"></a>1.Markdown是什么？</h3><p><strong>Markdow</strong>是一种轻量级<strong>标记语言</strong> ，它以纯文本形式(易读、易写、易更改)编写文档，并最终以HTML格式发布。<strong>Markdown</strong>也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。</p>
<h3 id="2-是谁创造了它？"><a href="#2-是谁创造了它？" class="headerlink" title="2.是谁创造了它？"></a>2.是谁创造了它？</h3><p>它由<a href="http://www.aaronsw.com/" target="_blank" rel="noopener">Aaron Swartz</a>和<strong>John Gruber</strong>共同设计，Aaron Swartz就是那位于2013年1月11日自杀,但是却有着开挂一般人生经历的程序员。维基百科对他的介绍是：<strong>软件工程师</strong>、<strong>作家</strong>、<strong>政治组织者</strong>、<strong>互联网活动家</strong>、<strong>维基百科人</strong>。  </p>
<p>他有着足以让你跪着膜拜的人生经历：<br>· <strong>14岁</strong>参与RSS 1.0规格标准的制订。<br>· <strong>2004年</strong>入读斯坦福，之后不屑一顾，选择退学。<br>· <strong>2005年</strong>创建<a href="http://infogami.org/" target="_blank" rel="noopener">Infogami</a>，之后与<a href="https://www.reddit.com/" target="_blank" rel="noopener">Reddit</a>合并成为其合伙人。<br>· <strong>2010年</strong>创立求进会（Demand Progress），积极参与禁止网络盗版法案（SOPA）活动，最终该提案被撤回。<br>· <strong>2011年</strong>7月19日，因被控从MIT和JSTOR下载480万篇学术论文并以免费形式上传于网络被捕。<br>· <strong>2013年</strong>1月自杀身亡。</p>
<p>或许这就是天才，对世界也是不屑一顾，选择了自杀。天才都有早逝的归途，还好我是个蠢材。</p>
<h3 id="3-为什么要使用它？"><a href="#3-为什么要使用它？" class="headerlink" title="3.为什么要使用它？"></a>3.为什么要使用它？</h3><ol>
<li>它是易读（看起来舒服）、易写（语法简单）、易更改<strong>纯文本</strong>。处处体现着<strong>极简主义</strong>的影子。</li>
<li>兼容HTML，可以转换为HTML格式发布。</li>
<li>支持跨平台使用。</li>
<li>越来越多的网站支持Markdown。</li>
<li>可以更方便清晰地组织你的电子邮件。（Markdown-here, Airmail）</li>
<li>主要是我不喜欢用记事本，成功摆脱记事本（我不是认真的）。</li>
</ol>
<h3 id="4-基本语法"><a href="#4-基本语法" class="headerlink" title="4.基本语法"></a>4.基本语法</h3><p>如果不算扩展，Markdown的基础语法绝对简单到让你爱不释手，一定会让你拜倒在它的石榴裙下。</p>
<p>Markdown语法主要分为如下几大部分：<br><strong>标题</strong>、<strong>段落</strong>、<strong>区块引用</strong>、<strong>代码区块</strong>、<strong>强调</strong>、<strong>列表</strong>、<strong>分割线</strong>、<strong>链接</strong>、<strong>图片</strong>、<strong>反斜杠 **、</strong>符号**。</p>
<h4 id="4-1-标题"><a href="#4-1-标题" class="headerlink" title="4.1 标题"></a>4.1 标题</h4><p>两种形式：<br>1）使用 = 和 - 标记一级和二级标题。  </p>
<blockquote>
<p>一级标题<br>======<br>二级标题<br>-——    </p>
</blockquote>
<p>效果：</p>
<blockquote>
<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题  "></a>一级标题  </h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题  "></a>二级标题  </h2></blockquote>
<p>2）使用#，可表示1-6级标题。</p>
<blockquote>
<p>#一级标题<br>##二级标题<br>###三级标题<br>####四级标题<br>#####五级标题<br>######六级标题  </p>
</blockquote>
<p>效果：  </p>
<blockquote>
<p>#一级标题<br>##二级标题<br>###三级标题<br>####四级标题<br>#####五级标题<br>######六级标题 </p>
</blockquote>
<h4 id="4-2-段落"><a href="#4-2-段落" class="headerlink" title="4.2 段落"></a>4.2 段落</h4><p>段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用两个以上空格加上回车（引用中换行省略回车）。</p>
<h4 id="4-3-区块引用"><a href="#4-3-区块引用" class="headerlink" title="4.3 区块引用"></a>4.3 区块引用</h4><p>在段落的每行或者只在第一行使用符号&gt;,还可使用多个嵌套引用，如：  </p>
<blockquote>
<p>&gt;区块引用<br>&gt;&gt;嵌套引用  </p>
</blockquote>
<p>效果：  </p>
<blockquote>
<p>区块引用  </p>
<blockquote>
<p>嵌套引用  </p>
</blockquote>
</blockquote>
<h4 id="4-4-代码区块"><a href="#4-4-代码区块" class="headerlink" title="4.4 代码区块"></a>4.4 代码区块</h4><p>代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样）。如:<br>普通段落：<br>void main()<br>{<br>  printf(“小钱真是一个聪明小帅哥。”);<br>}</p>
<p>代码区块：<br>    void main()<br>    {<br>        &ensp;&ensp;&ensp;printf(“小钱真是一个聪明小帅哥。”);<br>    }</p>
<p><strong>注意</strong>:需要和普通段落之间存在空行。空了4个空后字体会变绿即可。  </p>
<h4 id="4-5-强调"><a href="#4-5-强调" class="headerlink" title="4.5 强调"></a>4.5 强调</h4><p>在强调内容两侧分别加上*或者_，如：  </p>
<blockquote>
<p>*斜体<em>、_斜体_<br>*</em>粗体**、_<em>粗体_</em>  </p>
</blockquote>
<p>效果：  </p>
<blockquote>
<p><em>斜体</em>、<em>斜体</em><br><strong>粗体</strong>、<strong>粗体</strong>   </p>
</blockquote>
<p>PS：这边建议用*和**来标记斜体和粗体比较好，个人建议，你不高兴就拉倒。</p>
<h4 id="4-6-列表"><a href="#4-6-列表" class="headerlink" title="4.6 列表"></a>4.6 列表</h4><p>1）使用·、+、或-标记无序列表，如：  </p>
<blockquote>
<p>- 第一项<br>+ 第二项<br>* 第三项  </p>
</blockquote>
<p>效果：  </p>
<blockquote>
<ul>
<li>第一项   </li>
</ul>
<ul>
<li>第二项    </li>
</ul>
<ul>
<li>第三项  </li>
</ul>
</blockquote>
<p>2）使用数字1，2，3…标记有序列表，如：  </p>
<blockquote>
<p>1.第一项<br>2.第二项<br>3.第三项  </p>
</blockquote>
<p>效果：  </p>
<blockquote>
<ol>
<li>第一项  </li>
<li>第二项  </li>
<li>第三项  </li>
</ol>
</blockquote>
<p>注意：这里小数点后面空两格才可以形成有序列表，不要出错咯！  </p>
<h4 id="4-7-分割线"><a href="#4-7-分割线" class="headerlink" title="4.7 分割线"></a>4.7 分割线</h4><p>分割线最常使用就是三个或以上*，还可以使用-和_。这里就不列举了，用的太少了（其实我懒）。  </p>
<h4 id="4-8-超链接"><a href="#4-8-超链接" class="headerlink" title="4.8 超链接"></a>4.8 超链接</h4><p>链接可以由两种形式生成：行内式和参考式。（推荐大家使用行内式，可以与图片方法进行类比）  </p>
<p><strong>行内式：</strong>  </p>
<blockquote>
<p>[hexo搭建博客教程](<a href="https://mp.weixin.qq.com/s?src=11&amp;timestamp=1585361209&amp;ver=2243&amp;signature=n6v*FCTMtiN8r7iNKq2MGyfBX5Psd9nclXVZeHdwugkTEi1BdEdEGOKLizpHXF1glyEFt99JRQpJpQ0cjY7kI3bv9I6r*mAvrgNvYCWzFZZSN2HblqiEq9bGw0Tlbd3R&amp;new=1" target="_blank" rel="noopener">https://mp.weixin.qq.com/s?src=11&amp;timestamp=1585361209&amp;ver=2243&amp;signature=n6v*FCTMtiN8r7iNKq2MGyfBX5Psd9nclXVZeHdwugkTEi1BdEdEGOKLizpHXF1glyEFt99JRQpJpQ0cjY7kI3bv9I6r*mAvrgNvYCWzFZZSN2HblqiEq9bGw0Tlbd3R&amp;new=1</a>)  </p>
</blockquote>
<p>效果：  </p>
<blockquote>
<p> <a href="https://mp.weixin.qq.com/s?src=11&timestamp=1585361209&ver=2243&signature=n6v*FCTMtiN8r7iNKq2MGyfBX5Psd9nclXVZeHdwugkTEi1BdEdEGOKLizpHXF1glyEFt99JRQpJpQ0cjY7kI3bv9I6r*mAvrgNvYCWzFZZSN2HblqiEq9bGw0Tlbd3R&new=1" target="_blank" rel="noopener">hexo搭建博客教程</a></p>
</blockquote>
<p><strong>参考式：</strong>  </p>
<blockquote>
<p> [百度1][1]<br> [百度2][2]<br> [1]:http:<a href="http://www.badiu.com" target="_blank" rel="noopener">www.badiu.com</a><br> [2]:http:<a href="http://www.badiu.com" target="_blank" rel="noopener">www.badiu.com</a>  </p>
</blockquote>
<p>效果：</p>
<blockquote>
<p> [百度1][1]<br> [百度2][2]<br> [1]:http:<a href="http://www.badiu.com" target="_blank" rel="noopener">www.badiu.com</a><br> [2]:http:<a href="http://www.badiu.com" target="_blank" rel="noopener">www.badiu.com</a>  </p>
</blockquote>
<p>PS：相比之下，参考式就逊色很多了。</p>
<h4 id="4-9-图片"><a href="#4-9-图片" class="headerlink" title="4.9 图片"></a>4.9 图片</h4><p>添加图片的形式和链接相似，只需在链接的基础上前方加一个！。<br>如：  </p>
<blockquote>
<p>![ ](图片地址)</p>
</blockquote>
<p>效果：  </p>
<blockquote>
<p><img src="http://cq.01nz.com.cn/public/attachment/201408/11/10/53e829e3cdbfc.jpg" alt="">  </p>
</blockquote>
<h4 id="4-10-反斜杠"><a href="#4-10-反斜杠" class="headerlink" title="4.10 反斜杠\"></a>4.10 反斜杠\</h4><p>相当于<strong>反转义</strong>作用。使符号成为普通符号。</p>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>有这些写一篇好的博文已经足够了，如果有需要继续学习的同学可以去代码库学习 。<br>但是包括额外扩展运用到Markdown都是需要收费的，14.95美元，需要的人可以理性购买，我比较穷，等有需要的时候再去购买。包括一些表格的制作等等。<br>好啦！！！希望对大家有所帮助，快去学习吧！然后制作属于自己的博文。</p>
]]></content>
  </entry>
  <entry>
    <title>hello-world大集合</title>
    <url>/2020/03/28/hello-world%E5%A4%A7%E9%9B%86%E5%90%88/</url>
    <content><![CDATA[<p>学计算机的都需要向”hello world”致敬！！！<br>原本是hexo搭建后自主形成的一个基础模板，但想了想干脆把这个博文改成一个相对有趣的博文。都说hello world是只有程序员才明白的梗，那我就上网查一下把所有语言的hello world来个大集合！快来看看吧！这里有没有你熟悉的语言呢？</p>
<a id="more"></a>

<h2 id="热门语言"><a href="#热门语言" class="headerlink" title="热门语言"></a>热门语言</h2><h3 id="Pascal"><a href="#Pascal" class="headerlink" title="Pascal"></a>Pascal</h3><blockquote>
<p>program Helloworld;<br><strong>begin</strong> writeln(‘hello,world.’);<br><strong>end</strong></p>
</blockquote>
<h3 id="C"><a href="#C" class="headerlink" title="C"></a>C</h3><blockquote>
<p>#include&lt;stdio.h&gt;<br>main( ){<br>&ensp;&ensp;&ensp;printf(“hello world!”);<br>}</p>
</blockquote>
<h3 id="C-1"><a href="#C-1" class="headerlink" title="C++"></a>C++</h3><blockquote>
<p>#include&lt;iostream&gt;<br>using namespace std;<br>int main( ){<br>&ensp;&ensp;cout &lt;&lt; “Hello World”&lt;&lt;endl;<br>&ensp;&ensp;return 0;<br>}  </p>
</blockquote>
<h3 id="Fortran"><a href="#Fortran" class="headerlink" title="Fortran"></a>Fortran</h3><blockquote>
<p>PROGRAM HELLOWORLD<br><strong>PRINT</strong> *, ‘Hello, World!’<br>END     </p>
</blockquote>
<h3 id="PERL"><a href="#PERL" class="headerlink" title="PERL"></a>PERL</h3><blockquote>
<p>$welcome = “Hello World”;<br>print “$welcome\n”;  </p>
</blockquote>
<h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><blockquote>
<p>&lt;html&gt;<br>&ensp;&lt;head&gt;<br>&ensp;&ensp;&lt;title&gt;Hello, World&lt;/title&gt;<br>&ensp;&lt;/head&gt;<br>&ensp;&lt;body&gt;<br>&ensp;&ensp;&ensp;&lt;h1&gt;Hello, World&lt;/h1&gt;<br>&ensp;&lt;/body&gt;<br>&lt;/html&gt;</p>
</blockquote>
<h3 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h3><blockquote>
<p>SELECT ‘HELLO, WORLD’ AS HELLO</p>
</blockquote>
<h3 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h3><blockquote>
<p>alert(‘Hello, World.’);</p>
</blockquote>
<h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><blockquote>
<?php $hello = 'Hello, World.';  
echo "$hello";?>
</blockquote>
<h3 id="C’-’"><a href="#C’-’" class="headerlink" title="C’#’"></a>C’#’</h3><blockquote>
<p>public class Hello<br>{<br>  &ensp;&ensp;public static void Main()<br>  &ensp;&ensp;{<br>  &ensp;&ensp;&ensp;&ensp;System.Console.WriteLine(“Hello, World!”);<br>  &ensp;&ensp;}<br>}  </p>
</blockquote>
<h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><blockquote>
<p>public class Hello {<br>&ensp;&ensp;public static void main(String[] args) {<br>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;System.out.println(“Hello, World”);<br>&ensp;&ensp;}<br>}</p>
</blockquote>
<p>###Python</p>
<blockquote>
<p>print(“hello world”)</p>
</blockquote>
<p>##</p>
<p>其他的我就不多写了，像什么TypeScript、AngularJS，大家如果有兴趣的话可以自己去学习！<br>不知道大家知道多少呢？如果还有更多的话，欢迎补充！！！</p>
<p><img src="https://i01piccdn.sogoucdn.com/754ca89177e7dbb3" alt=""></p>
]]></content>
  </entry>
</search>
